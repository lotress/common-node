{
  "version": 3,
  "file": "common.js",
  "sourceRoot": "",
  "sources": [
    "src\\common.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "identity = (x) => x\r\nNone = => undefined\r\n\r\nisType = (type) => (x) => typeof x is type\r\nisObject = isType 'object'\r\nisFunction = isType 'function'\r\n\r\nconcatArr = (arr, cur) => arr.concat if Array.isArray cur then cur else [cur]\r\n\r\nflatArray = (arr = []) => arr.reduce concatArr, []\r\n\r\nflatObject = (o) =>\r\n  res = {}\r\n  for key of o when o[key]? and o.hasOwnProperty key\r\n    if (isObject o[key]) and (not Array.isArray o[key])\r\n      Object.assign res, flatObject o[key]\r\n    else if not res[key]? then res[key] = o[key]\r\n  res\r\n\r\n# Synchronous function only\r\nisSymmetry = (f) =>\r\n  if not isFunction f\r\n    throw new TypeError 'Parameter is not a Function'\r\n  (...args) =>\r\n    l = f ...args\r\n    r = f ...args.reverse()\r\n    l is r\r\n\r\nisIterable = (x) => isObject(x) and x[Symbol.iterator]\r\ngetIterator = (x) => x[Symbol.iterator]()\r\nisMultiIterable = (x) => isIterable(x) and not isSymmetry(getIterator) x\r\n\r\nmapList = (func) => (list) ->\r\n  for item from list\r\n    x = func list\r\n    if isIterable x\r\n      yield* x\r\n    else\r\n      yield x\r\n\r\n# M constructs a Monad wrapping a deferred function using Promise\r\n# M(f) is lazy and reinvokable just like a plain function\r\n# with .then and .catch methods like a Promise\r\n# Monad Laws:\r\n# f: a -> M b\r\n# g: b -> M c\r\n# unit(a).then f = f a\r\n# unit unit x = unit x\r\n# m.then(f).then(g) = m.then a -> f(a).then g\r\nM = do =>\r\n  # though this interface looks like Promise, but Promise isn't reinvokable,\r\n  # so we do not accept a Promise here\r\n  handler = (onFulfilled, onRejected) ->\r\n    if onFulfilled and not isFunction onFulfilled\r\n      throw new TypeError \"Parameter onFulfilled isn't a Function\"\r\n    if onRejected and not isFunction onRejected\r\n      throw new TypeError \"Parameter onRejected isn't a Function\"\r\n    if onFulfilled or onRejected\r\n      @deferreds.push {onFulfilled, onRejected}\r\n    else\r\n      throw new TypeError 'Neither onFulfilled nor onRejected is a Function'\r\n    @\r\n  reject = (onRejected) -> @then null, onRejected\r\n  (f) =>\r\n    if not isFunction f\r\n      _t = f\r\n      f = => _t\r\n    if isFunction(f.then) and isFunction(f.catch)\r\n      return f\r\n    deferreds = []\r\n    r = (...args) ->\r\n      # everytime when r is called,\r\n      # we new a Promise and append every deferreds to it,\r\n      # so r is reinvokable\r\n      deferreds.reduce ((p, d) => p.then d.onFulfilled, d.onRejected)\r\n      , Promise.resolve().then => f ...args\r\n    r.deferreds = deferreds\r\n    Object.assign r,\r\n      # since M(f) is just a function and\r\n      # Promise.prototype.then will lift function to Promise, leaving Promise untouched.\r\n      # we use .then alias for both .map and .bind in a typical Monad\r\n      then: handler.bind r\r\n      catch: reject.bind r\r\n\r\nbindObject = (o, name) => o[name].bind o\r\n\r\nallPromise = bindObject Promise, 'all'\r\nracePromise = bindObject Promise, 'race'\r\n\r\ninvokeAsync = (func) => (args...) -> await func args...\r\n\r\nexpandApply = (func) => (arr = []) => func arr...\r\nmapArr = (func) => (arr) => arr.map func\r\nzipApplyArr = (a1) => (a2 = []) => a1.map (f, i) => f a2[i]\r\ninvokePromises = (predicate) => (funcs) =>\r\n  if not Array.isArray funcs\r\n    throw new TypeError 'Functions is not an Array'\r\n  if not funcs?.length\r\n    throw new TypeError 'Functions is empty'\r\n  if not funcs.every isFunction\r\n    throw new TypeError 'Some handler is not a Function'\r\n  g = (f) => expandApply invokeAsync f\r\n  fz = zipApplyArr mapArr(g) funcs\r\n  (arr) => predicate fz arr\r\nallAwait = invokePromises allPromise\r\nraceAwait = invokePromises racePromise\r\napply = (func) =>\r\n  f = expandApply invokeAsync func\r\n  (mapFunc) => mapFunc f\r\n\r\nmakeFrame = (keys = []) => (values = []) =>\r\n  o = {}\r\n  keys.forEach (key, i) =>\r\n    if values[i] isnt undefined then o[key] = values[i]\r\n  o\r\n\r\nfirstElement = (iterable) => iterable[Symbol.iterator]().next().value\r\n\r\npall = (fn) =>\r\n  if not isFunction fn\r\n    throw new TypeError 'Parameter is not a Function'\r\n  (items = []) => allPromise mapArr(fn) items\r\n\r\npushMap = (map) =>\r\n  if not map instanceof Map\r\n    throw new TypeError 'Parameter is not a Map'\r\n  (item) => (key) =>\r\n    c = map.get key\r\n    c ?= []\r\n    c.push item\r\n    map.set key, c\r\n\r\n# Let setTimeout converts timeout parameter, no check here\r\ndelay = (timeout) => =>\r\n  new Promise (resolve) =>\r\n    setTimeout (=> resolve(timeout)), timeout\r\n\r\ndeadline = (timeout) => =>\r\n  new Promise (resolve, reject) =>\r\n    setTimeout (=> reject(timeout)), timeout\r\n\r\nretry = (f) =>\r\n  if not isFunction f\r\n    throw new TypeError 'Parameter is not a Function'\r\n  (count = 1) =>\r\n    count = +count\r\n    if not(count >= 0)\r\n      throw new Error 'Retry count is negative or NaN'\r\n    (...args) =>\r\n      do g = (e = undefined) =>\r\n        if count--\r\n          Promise.resolve().then => f ...args\r\n          .catch g\r\n        else\r\n          Promise.reject e\r\n\r\nlogLevel = 2\r\n\r\ngenLog = do (logLevel) => (level) => (func) =>\r\n  if logLevel > level\r\n    func\r\n  else\r\n    None\r\n\r\n###eslint no-console: 0###\r\nlogInfo = genLog(1) bindObject console, 'log'\r\n\r\nlogError = genLog(-1) bindObject console, 'error'\r\n\r\nmodule.exports = {\r\n  identity,\r\n  None,\r\n  M,\r\n  concatArr,\r\n  flatArray,\r\n  flatObject,\r\n  invokeAsync,\r\n  allAwait,\r\n  raceAwait,\r\n  delay,\r\n  deadline,\r\n  retry,\r\n  pall,\r\n  makeFrame,\r\n  firstElement,\r\n  pushMap,\r\n  logInfo,\r\n  logError\r\n}"
  ]
}