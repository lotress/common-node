{
  "version": 3,
  "file": "common.js",
  "sourceRoot": "",
  "sources": [
    "src\\common.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "concatArr = (res, arr) =>\r\n  res.concat arr\r\n\r\nflatArray = (arr) =>\r\n  arr.reduce concatArr, []\r\n\r\nflatObject = (o) =>\r\n  res = {}\r\n  for key of o when o[key]? and o.hasOwnProperty key\r\n    if (typeof o[key] is 'object') and (not Array.isArray o[key])\r\n      Object.assign res, flatObject o[key]\r\n    else if not res[key]? then res[key] = o[key]\r\n  res\r\n\r\nidentity = (x) => x\r\nNone = => undefined\r\n\r\nbindObject = (o, name) => o[name].bind o\r\n\r\nallPromise = bindObject Promise, 'all'\r\nracePromise = bindObject Promise, 'race'\r\n\r\ninvokeAsync = (func) => (args...) -> await func args...\r\n\r\nexpandApply = (func) => (arr) => func arr...\r\nmapArr = (func) => (arr) => arr.map func\r\nzipApplyArr = (a1) => (a2) => a1.map (f, i) => f a2[i]\r\ninvokePromises = (predicate) => (funcs) =>\r\n  g = (f) => expandApply invokeAsync f\r\n  fz = zipApplyArr mapArr(g) funcs\r\n  (arr) => predicate fz arr\r\nallAwait = invokePromises allPromise\r\nraceAwait = invokePromises racePromise\r\napply = (func) =>\r\n  f = expandApply invokeAsync func\r\n  (mapFunc) => mapFunc f\r\n\r\nmakeFrame = (keys) => (values) =>\r\n  o = {}\r\n  keys.forEach (key, i) =>\r\n    if values[i] isnt undefined then o[key] = values[i]\r\n  o\r\n\r\nfirstElement = (iterable) => iterable[Symbol.iterator]().next().value\r\n\r\npall = (fn) => (items) =>\r\n  allPromise items.map fn\r\n\r\npushMap = (map) => (item) => (key) =>\r\n  c = map.get key\r\n  c ?= []\r\n  c.push item\r\n  map.set key, c\r\n\r\ndelay = (timeout) => =>\r\n  new Promise (resolve) =>\r\n    setTimeout (=> resolve(timeout)), timeout\r\n\r\ndeadline = (timeout) => =>\r\n  new Promise (resolve, reject) =>\r\n    setTimeout (=> reject(timeout)), timeout\r\n\r\nretry = (f) => (count = 1) => (...args) =>\r\n  do g = (e = undefined) =>\r\n    if count--\r\n      Promise.resolve f ...args\r\n      .catch g\r\n    else\r\n      Promise.reject e\r\n\r\nlogLevel = 2\r\n\r\ngenLog = do (logLevel) => (level) => (func) =>\r\n  if logLevel > level\r\n    func\r\n  else\r\n    None\r\n\r\n###eslint no-console: 0###\r\nlogInfo = genLog(1) bindObject console, 'log'\r\n\r\nlogError = genLog(-1) bindObject console, 'error'\r\n\r\ngetFullPath = (directory) =>\r\n  path = require 'path'\r\n  p = path.join process.cwd(), directory\r\n  (name) =>\r\n    path.join p, name\r\n\r\nmodule.exports = {\r\n  concatArr,\r\n  flatArray,\r\n  flatObject,\r\n  identity,\r\n  None,\r\n  invokeAsync,\r\n  allAwait,\r\n  raceAwait,\r\n  delay,\r\n  deadline,\r\n  retry,\r\n  makeFrame,\r\n  firstElement,\r\n  pall,\r\n  pushMap,\r\n  logInfo,\r\n  logError,\r\n  getFullPath\r\n}"
  ]
}